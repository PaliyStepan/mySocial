{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profileinfo/Profileinfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/Profileinfo/ProfileStatusWithHooks.js","components/Profile/Profileinfo/Profileinfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","Profileinfo","profile","className","classes","profileinfo","src","photos","large","alt","fullName","userId","Preloader","Post","post","message","like","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","likesCount","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.fab36d20.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileinfo\":\"Profileinfo_profileinfo__3fs2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2MZXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__LJwDW\"};","import React, {useEffect, useState} from \"react\";\r\n// import classes from \"./Profileinfo.module.scss\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(false);\r\n    //   let editMode = stateWithSetState[0];\r\n    //  let setEditMode = stateWithSetState[1];\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activatedMode}>\r\n                    {props.status || \"----- \" }\r\n                </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivatedEditMode} onChange={onStatusChange}\r\n                      value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from \"react\";\r\nimport classes from './Profileinfo.module.scss'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n// import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst Profileinfo = ({profile,status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return(\r\n        <div className={classes.profileinfo}>\r\n            <img src={profile.photos.large} alt=\"\"/>\r\n            <div>\r\n                <h1> Меня зовут {profile.fullName} </h1>\r\n                <h2> Мой ID = {profile.userId}</h2>\r\n                {/*<div>*/}\r\n                {/*    <small>Мой статус</small>*/}\r\n                {/*    {*/}\r\n                {/*        props.profile.aboutMe ? <div> {props.profile.aboutMe} </div> : null*/}\r\n                {/*    }*/}\r\n\r\n                {/*</div>*/}\r\n                {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profileinfo","import React from 'react'\r\nimport classes from './Post.module.scss'\r\n\r\nconst Post = (props) => {\r\n   \r\n  \r\n    return(\r\n        <div className={classes.post}>\r\n            <img\r\n                src=\"https://paulkingart.com/wp-content/uploads/2019/07/Kurt-Cobain-1993_PWK.jpg\"\r\n                alt=\"\"\r\n            />\r\n            <h2>\r\n                {props.message}\r\n            </h2>\r\n            <span>\r\n                У ВАС &nbsp;\r\n                {props.like}  &nbsp;\r\n                лайков\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport classes from './MyPosts.module.scss'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FromControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter your Message\"\r\n                     validate={[required, maxLength10 ]}\r\n              />\r\n          </div>\r\n          <div>\r\n              <button>Добавить</button>\r\n          </div>\r\n      </form>\r\n  )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // console.log(\"sdas\")\r\n\r\n    let postsElements =\r\n        props.posts.map(post => <Post message={post.message} like={post.likesCount} key={post.id}/>)\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>Мои посты</h3>\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (props) =>  {\r\n\r\n\r\n\r\n    // let state = props.fake_store.getState();\r\n\r\n\r\n    // let addPost = () =>{\r\n    //     props.fake_store.dispatch(addPostActionCreator());\r\n    // }\r\n    //\r\n    // let onPostChange = (text) => {\r\n    //     let action = updateNewPostActionCreator(text);\r\n    //     props.fake_store.dispatch(action);\r\n    // }\r\n\r\n  /*  return(\r\n        <StoreContext.Consumer>\r\n            {\r\n                (fake_store) => {\r\n\r\n                    let state = fake_store.getState();\r\n\r\n                    let addPost = () =>{\r\n                        fake_store.dispatch(addPostActionCreator());\r\n                    };\r\n\r\n                    let onPostChange = (text) => {\r\n                        let action = updateNewPostActionCreator(text);\r\n                        fake_store.dispatch(action);\r\n                    };\r\n\r\n                   return <MyPosts updateNewPostText={onPostChange}\r\n                             addPost={addPost}\r\n                             posts={state.profilePage.posts}\r\n                             // posts={state.getState().profilePage.posts}\r\n                             // newPostText={state.getState().profilePage.newPostText}\r\n                             newPostText={state.profilePage.newPostText}\r\n                    />\r\n                }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )*/\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostActionCreator(text);\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <Profileinfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if  (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n//\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\n\r\n//\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps,{getUserProfile}) (WithUrlDataContainerComponent);"],"sourceRoot":""}