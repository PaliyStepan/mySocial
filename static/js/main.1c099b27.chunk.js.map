{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.scss","Redux/dialogs-reducer.js","utils/object-helpers.js","Redux/users-reducer.js","components/News/News.module.scss","components/Music/Music.module.scss","components/Settings/Settings.module.scss","components/Login/Login.module.sass","Assets/Images/loading.gif","serviceWorker.js","components/Navbar/Navbar.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","components/Header/Header.js","Redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FromControls/FormsControls.js","components/common/preloader/Preloader.js","utils/validators/validators.js","components/Header/Header.module.scss","components/common/FromControls/FormsControls.module.scss","Redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","useId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","dispatch","a","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","followed","filter","Boolean","window","location","hostname","match","NavBar","className","classes","nav","item","to","activeClassName","active","News","news","Music","music","Settings","settings","Header","props","header","src","alt","loginBlock","isAuth","onClick","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","сreateField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","Preloader","DialogsContainer","lazy","UsersContainer","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formСontrol","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","getUserProfile","setStatus","newPost"],"mappings":"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","file":"static/js/main.1c099b27.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:  {\r\n        \"API-KEY\": \"642a3f6d-fe34-48fd-b2cd-37283583ad4a\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1,pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return  instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method! use profile Api');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return  instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/` , { status: status} );\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return  instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Uaxz\",\"item\":\"Navbar_item__3N5W2\",\"active\":\"Navbar_active__3aFti\"};","// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kurt'},\r\n        {id: 2, name: 'Виктор'},\r\n        {id: 3, name: 'Александра'},\r\n        {id: 4, name: 'Денис'},\r\n        {id: 5, name: 'Илья'},\r\n        {id: 6, name: 'Жозя'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'hello'},\r\n        {id: 2, message: 'Hi there'},\r\n        {id: 3, message: 'Hi youreself'},\r\n        {id: 4, message: 'lorem dasdas dasd'},\r\n        {id: 5, message: 'Как твои дела?'},\r\n        {id: 6, message: 'Пошли пить пивао'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    // let stateCopy;\r\n\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY:\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body\r\n        //     };\r\n        //     // stateCopy.newMessageBody = action.body;\r\n        //     // return stateCopy;\r\n        case SEND_MESSAGE:\r\n            // let body = state.newMessageBody;\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:7, message: body}]\r\n            };\r\n\r\n\r\n            // stateCopy.messages.push({\r\n            //     id: 7, message: body\r\n            // });\r\n            // return stateCopy;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n};\r\n// export const updateNewMessageBodyCreator = (body) =>  {\r\n//     return {\r\n//         type: UPDATE_NEW_MESSAGE_BODY,\r\n//         body: body\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default dialogsReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) =>{\r\n    return items.map(u => {\r\n        if  (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    } )\r\n} ;","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users:  [],\r\n    pageSize: 3,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.useId, \"id\", {followed: true})\r\n               /* users: state.users.map(u => {\r\n                    if  (u.id === action.useId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                } )*/\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.useId, \"id\", {followed: false})\r\n               /* users: state.users.map(u => {\r\n                    if  (u.id === action.useId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                } )*/\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n              ...state,\r\n              users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId )\r\n\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const followSuccess = (useId) => (\r\n    {type: FOLLOW, useId}\r\n);\r\nexport const unfollowSuccess = (useId) => (\r\n    { type: UNFOLLOW, useId}\r\n);\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n});\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT, totalCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\r\n});\r\n\r\n\r\n\r\nexport const getUsers =  (currentPage, pageSize) => {\r\n    /* return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        }) */\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch, useId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, useId));\r\n    let response = await apiMethod(useId);\r\n\r\n    if (response.data.resultCode === 0 ){\r\n        dispatch(actionCreator(useId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, useId));\r\n};\r\n\r\nexport const follow =  (useId) => {\r\n      /* return (dispatch) => {\r\n           dispatch(toggleFollowingProgress(true, useId));\r\n           usersAPI.follow(useId)\r\n               .then(response => {\r\n                   if (response.data.resultCode === 0 ){\r\n                       dispatch(followSuccess(useId));\r\n                   }\r\n                   dispatch(toggleFollowingProgress(false, useId));\r\n               });\r\n    }*/\r\n\r\n       return async (dispatch) => {\r\n           //let apiMethod = usersAPI.follow.bind(usersAPI);\r\n           //let actionCreator = followSuccess;\r\n\r\n           followUnfollowFlow(dispatch, useId, usersAPI.follow.bind(usersAPI) , followSuccess);\r\n\r\n           // dispatch(toggleFollowingProgress(true, useId));\r\n           // let response = await apiMethod(useId);\r\n           //\r\n           // if (response.data.resultCode === 0 ){\r\n           //     dispatch(actionCreator(useId));\r\n           // }\r\n           // dispatch(toggleFollowingProgress(false, useId));\r\n    }\r\n};\r\n\r\nexport const unfollow =  (useId) => {\r\n       /*return (dispatch) => {\r\n           dispatch(toggleFollowingProgress(true, useId));\r\n\r\n            usersAPI.unfollow(useId);\r\n               .then(response => {\r\n                   if (response.data.resultCode === 0 ){\r\n                       dispatch(unfollowSuccess(useId));\r\n                   }\r\n                   dispatch(toggleFollowingProgress(false, useId));\r\n               });\r\n    }*/\r\n       return async (dispatch) => {\r\n           // apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n           //let actionCreator = unfollowSuccess;\r\n           followUnfollowFlow(dispatch, useId,usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\r\n/*           dispatch(toggleFollowingProgress(true, useId));\r\n\r\n           let response = await apiMethod(useId);\r\n           if (response.data.resultCode === 0 ){\r\n               dispatch(actionCreator(useId));\r\n           }\r\n           dispatch(toggleFollowingProgress(false, useId));*/\r\n        }\r\n};\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__9WCri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music___aojt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1qASl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3VuEW\"};","module.exports = __webpack_public_path__ + \"static/media/loading.29d7d247.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport classes from './Navbar.module.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <nav className={classes.nav}> \r\n        <ul>\r\n          {/*<li className={`${classes.item} ${classes.active}`}>*/}\r\n          <li className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n              Profile\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"dialogs\" activeClassName={classes.active}>\r\n              Messages\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"news\" activeClassName={classes.active}>\r\n              News\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"users\" activeClassName={classes.active}>\r\n              Users\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"music\" activeClassName={classes.active}>\r\n              Music\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"settings\" activeClassName={classes.active}>\r\n              Settings\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav> \r\n    )\r\n}\r\n\r\nexport default NavBar","import React from \"react\";\r\nimport classes from './News.module.scss'\r\n\r\nconst News = () => {\r\n\r\n    return(\r\n        <div className={classes.news}>\r\n            <h1>\r\n                NEWS\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from \"react\";\r\nimport classes from \"./Music.module.scss\"\r\n\r\nconst Music = () =>{\r\n\r\n    return(\r\n        <div className={classes.music}>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from \"react\";\r\nimport classes from './Settings.module.scss'\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={classes.settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\nimport  classes from'./Header.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className={classes.header}> \r\n            <img src='https://data.whicdn.com/images/122567715/original.png' alt=\"Logo\"/>\r\n            <div className={classes.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ?  <div> {props.login} - <button onClick={props.logout}>Logout</button>  </div>\r\n                        : <NavLink to={'/login'}>LOGIN </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                // isAuth: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId,email,login,isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    // return  authAPI.me()\r\n    //     //     .then(response => {\r\n    //     //         if (response.data.resultCode === 0) {\r\n    //     //             let {id, email, login} = response.data.data;\r\n    //     //             dispatch(setAuthUserData(id, email, login, true));\r\n    //     //         }\r\n    //     //     });\r\n\r\n    let response = await  authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    // authAPI.login(email, password, rememberMe)\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode === 0) {\r\n    //             dispatch(getAuthUserData());\r\n    //         } else {\r\n    //             let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n    //             dispatch(stopSubmit(\"login\", {_error: message}));\r\n    //         }\r\n    //     });\r\n    //\r\n   let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    // authAPI.logout()\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode === 0) {\r\n    //             dispatch(getAuthUserData(null, null, null, false));\r\n    //         }\r\n    //     });\r\n\r\n   let response =  await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData(null, null, null, false));\r\n        }\r\n};\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout }) (HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Input, сreateField} from \"../common/FromControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./Login.module.sass\"\r\n\r\n//const LoginForm = (props) =>  {   // деструктр.\r\nconst LoginForm = ({handleSubmit,error}) =>  {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {сreateField(\"Email\", \"email\", [required], Input) }\r\n            {сreateField(\"Password\", \"password\", [required], Input, {type: \"password\"}) }\r\n            {сreateField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\") }\r\n\r\n          {/*  <div>\r\n                <Field placeholder={\"Email\"}\r\n                       component={Input}\r\n                       name={\"email\"}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} component={Input} name={\"password\"} type=\"password\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            */}\r\n            {/*<div>*/}\r\n            {/*    <Field type=\"checkbox\" component={Input} name={\"rememberMe\"}/> Remember me*/}\r\n            {/*</div>*/}\r\n            { error && <div className={classes.formSummaryError}> {error}</div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) =>  {\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default  connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default appReducer;","\r\n\r\nlet initialState = {\r\n}\r\n\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage :profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    sidebar : sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// window.store = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return props => {\r\n        return <Suspense fallback={Preloader}><Component {...props}/> </Suspense>\r\n    }\r\n\r\n\r\n};","import React, {Suspense} from 'react';\r\nimport './App.scss';\r\nimport NavBar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends React.Component  {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render(){\r\n\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <NavBar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path='/dialogs'\r\n                           render={() =>  <Suspense fallback={Preloader}><DialogsContainer/> </Suspense>}\r\n                    />\r\n                    <Route path='/profile/:userId?'render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n                    <Route path='/news' render={() => <News/>}/>\r\n                    <Route path='/music' render={() => <Music/>}/>\r\n                    <Route path='/settings' render={() => <Settings/>}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps,{ initializeApp })) (App);\r\n\r\nconst  MainApp = (props) => {\r\n   return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </BrowserRouter>\r\n};\r\n\r\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from './App';\r\n\r\n    ReactDOM.render(<MainApp />,document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n// ReactDOM.render(<App state={state}  addPost={addPost}/>, document.getElementById('root'));\r\n\r\n// rerenderEntireTree(fake_store.getState());\r\n\r\n\r\n// fake_store.subscribe(rerenderEntireTree);\r\n\r\n// fake_store.subscribe( () => {\r\n//     let state = fake_store.getState();\r\n//     rerenderEntireTree(state);\r\n// });\r\n\r\n\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./FormsControls.module.scss\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError =  touched && error;\r\n    return (\r\n        <div className={classes.formСontrol + \" \" + (hasError ? classes.error : \" \" ) }>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) =>{\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n};\r\nexport const Input = (props) =>{\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n};\r\n\r\nexport const сreateField = (placeholder, name, validators, component, props = {}, text= \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n);","import React from \"react\";\r\nimport preloader from \"../../../Assets/Images/loading.gif\"\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div className=\"preloader\"><img src={preloader} alt=\"preloader\" /> </div>\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1UEFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formСontrol\":\"FormsControls_formСontrol__3ONZp\",\"error\":\"FormsControls_error__3D5VU\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts:  [\r\n        {id: 1, message: 'Hi Man', likesCount: 150},\r\n        {id: 2, message: 'Hi Bitch', likesCount: 66},\r\n        {id: 3, message: 'Было круто', likesCount: 216},\r\n        {id: 4, message: 'Зря пошли', likesCount: 22},\r\n    ],\r\n    // newPostText: 'Текст из State',\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 255\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,newPost ],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        // case UPDATE_NEW_POST_TEXT: {\r\n        //     return {\r\n        //         ...state,\r\n        //         newPostText: action.newText\r\n        //     };\r\n        // }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profile) =>  {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) =>  async (dispatch) => {\r\n    // usersAPI.getProfile(userId)\r\n    //     .then(response => {\r\n    //         dispatch(setUserProfile(response.data));\r\n    //     });\r\n\r\n    let response = await usersAPI.getProfile(userId);\r\n       dispatch(setUserProfile(response.data));\r\n};\r\n\r\n\r\nexport const setStatus = (status) =>  {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) =>  {\r\n    // profileAPI.getStatus(userId)\r\n    //     .then(response => {\r\n    //         dispatch(setStatus(response.data));\r\n    //     });\r\n\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n};\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch) =>  {\r\n    // profileAPI.updateStatus(status)\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode ===0 ) {\r\n    //             dispatch(setStatus(status));\r\n    //         }\r\n    //     });\r\n\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// export const updateNewPostActionCreator = (text) =>  {\r\n//     return {\r\n//         type: UPDATE_NEW_POST_TEXT,\r\n//         newText: text\r\n//     }\r\n// };\r\n\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}